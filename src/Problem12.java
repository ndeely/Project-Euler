/*
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:

1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
*/

import java.math.BigInteger;

public class Problem12 {
    private int counter = 0;
    private BigInteger currentNumber = new BigInteger("0");
    private int currentDivisors = 0;
    private int divisorCount = 500;

    public Problem12() {
        while (this.currentDivisors <= this.divisorCount) {
            this.currentNumber = currentNumber.add(BigInteger.valueOf(this.counter++));
            this.currentDivisors = countDivisors(currentNumber);
            System.out.println("Current Number: " + this.currentNumber);
            System.out.println("Current Divisors: " + this.currentDivisors);
        }
        System.out.println("Current Number: " + this.currentNumber);
        System.out.println("Current Divisors: " + this.currentDivisors);
    }

    private int countDivisors(BigInteger n) {
        if (n.intValue() == 1) {
            return 1;
        }

        int count = 2;
        for (int i = 2; i <= n.intValue()/2; i++) {
            if (n.intValue()%i == 0) {
                count++;
            }
        }
        return count;
    }

}
